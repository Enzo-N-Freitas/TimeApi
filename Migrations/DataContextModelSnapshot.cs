// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeApi.Data;

#nullable disable

namespace TimeApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TimeApi.Models.Afazeres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAfazer")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("NomeAfazer")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int>("TipodeAfazer")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TB_AFAZERES", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Varrer o chão, lavar o banheiro e tirar pó das estantes",
                            NomeAfazer = "Limpar a Casa",
                            TipodeAfazer = 1
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Terminar a apresentação para a equipe da empresa",
                            NomeAfazer = "Terminar Apresentação",
                            TipodeAfazer = 3
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Finalizar a API da aula de DS e entregar no prazo",
                            NomeAfazer = "Terminar a API",
                            TipodeAfazer = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
